version: "3"
services:
  db:
    image: "postgres:12"
    container_name: "siren_postgres"
    ports:
      - "5432:5432"
    volumes:
      - siren_dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "siren_dev"
      POSTGRES_HOST_AUTH_METHOD: "trust"
  consul:
    image: consul
    ports:
      - "8500:8500"
  cortex:
    image: quay.io/cortexproject/cortex:master-63703f5
    container_name: "siren_cortex"
    command: cortex -config.file=/etc/single-process-config.yaml \
      -ring.store=consul \
      -consul.hostname=consul:8500
    ports:
      - "9009:9009"
    environment:
      minio_host: siren_nginx_1
    volumes:
      - ./docker/single_process_cortex.yaml:/etc/single-process-config.yaml
    extra_hosts:
      - "cortex.siren_nginx_1:127.0.0.1"
    networks:
      - siren
    depends_on:
      - minio1
  minio1:
    image: minio/minio:RELEASE.2021-04-22T15-44-28Z
    volumes:
      - data1-1:/data1
    ports:
      - "9000:9000"
    networks:
      - siren
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_DOMAIN: localhost
    command: server /data1
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
  createbuckets:
    image: minio/mc
    networks:
      - siren
    depends_on:
      - minio1
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio1:9000 minio minio123;
      /usr/bin/mc rm -r --force myminio/cortex;
      /usr/bin/mc mb myminio/cortex;
      /usr/bin/mc policy download myminio/cortex;
      exit 0;
      "
volumes:
  siren_dbdata:
  data1-1:

networks:
  siren:
    driver: bridge
