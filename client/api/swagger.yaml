openapi: 3.0.1
info:
  title: Siren.
  description: Documentation of our Siren API.
  version: 1.0.0
servers:
- url: http://localhost:3000/
paths:
  /alertingCredentials/teams/{teamName}:
    get:
      tags:
      - alertcredential
      description: 'Get AlertCredentials API: This API helps in getting the teams
        slack and pagerduty credentials'
      operationId: getAlertCredentialRequest
      parameters:
      - name: teamName
        in: path
        description: name of the team
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-go-name: TeamName
        x-go-name: TeamName
      responses:
        "200":
          description: AlertCredentialResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertCredentialResponse'
    put:
      tags:
      - alertcredential
      description: 'Upsert AlertCredentials API: This API helps in creating or updating
        the teams slack and pagerduty credentials'
      operationId: createAlertCredentialRequest
      parameters:
      - name: teamName
        in: path
        description: name of the team
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-go-name: TeamName
        x-go-name: TeamName
      requestBody:
        description: Create AlertCredential request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertCredentialResponse'
        required: false
      responses:
        "200":
          content: {}
      x-codegen-request-body-name: Body
  /history:
    get:
      tags:
      - alertHistory
      description: 'GET Alert History API: This API lists stored alert history for
        given filers in query params'
      operationId: getAlertHistoryRequest
      parameters:
      - name: resource
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Resource
        x-go-name: Resource
      - name: startTime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: uint32
          x-go-name: StartTime
        x-go-name: StartTime
      - name: endTime
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: uint32
          x-go-name: EndTime
        x-go-name: EndTime
      responses:
        "200":
          description: Get alertHistory response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertHistoryObject'
                x-content-type: application/json
    post:
      tags:
      - alertHistory
      description: 'Create Alert History API: This API create alert history'
      operationId: createAlertHistoryRequest
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Alerts'
        required: false
      x-codegen-request-body-name: Body
  /ping:
    get:
      tags:
      - ping
      description: Ping call
      operationId: ping
      responses:
        "200":
          description: Response body for Ping.
          content: {}
  /rules:
    get:
      tags:
      - rules
      description: 'List Rules API: This API lists all the existing rules with given
        filers in query params'
      operationId: listRulesRequest
      parameters:
      - name: namespace
        in: query
        description: List Rule Request
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Namespace
        x-go-name: Namespace
      - name: entity
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Entity
        x-go-name: Entity
      - name: group_name
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: GroupName
        x-go-name: GroupName
      - name: status
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Status
        x-go-name: Status
      - name: template
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Template
        x-go-name: Template
      responses:
        "200":
          description: List rules response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rule'
                x-content-type: application/json
    put:
      tags:
      - rules
      description: 'Upsert Rule API: This API helps in creating a new rule or update
        an existing one with unique combination of namespace, entity, group_name,
        template'
      operationId: createRuleRequest
      requestBody:
        description: Create rule request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
      x-codegen-request-body-name: Body
  /templates:
    get:
      tags:
      - templates
      description: 'List Templates API: This API lists all the existing templates
        with given filers in query params'
      operationId: listTemplatesRequest
      parameters:
      - name: tag
        in: query
        description: List Template Request
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Tag
        x-go-name: Tag
      responses:
        "200":
          description: List templates response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
                x-content-type: application/json
    put:
      tags:
      - templates
      description: 'Upsert Templates API: This API helps in creating or updating a
        template with unique name'
      operationId: createTemplateRequest
      requestBody:
        description: Create template request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
      x-codegen-request-body-name: Body
  /templates/{name}:
    get:
      tags:
      - templates
      description: 'Get Template API: This API gets a template given the template
        name'
      operationId: getTemplatesRequest
      parameters:
      - name: name
        in: path
        description: Get Template Request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-go-name: Name
        x-go-name: Name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
    delete:
      tags:
      - templates
      description: 'Delete Template API: This API deletes a template given the template
        name'
      operationId: deleteTemplatesRequest
      parameters:
      - name: name
        in: path
        description: Delete Template Request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-go-name: Name
        x-go-name: Name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
  /templates/{name}/render:
    post:
      tags:
      - templates
      description: 'Render Template API: This API renders the given template with
        given values'
      operationId: renderTemplatesRequest
      parameters:
      - name: name
        in: path
        description: Render Template Request
        required: true
        style: simple
        explode: false
        schema:
          type: string
          x-go-name: Name
        x-go-name: Name
      responses:
        "200":
          content: {}
components:
  schemas:
    Alert:
      type: object
      properties:
        annotations:
          $ref: '#/components/schemas/Annotations'
        labels:
          $ref: '#/components/schemas/Labels'
        status:
          type: string
          x-go-name: Status
      x-go-package: github.com/odpf/siren/domain
    AlertCredentialResponse:
      type: object
      properties:
        entity:
          type: string
          x-go-name: Entity
        pagerduty_credentials:
          type: string
          x-go-name: PagerdutyCredentials
        slack_config:
          $ref: '#/components/schemas/SlackConfig'
      example:
        slack_config:
          critical:
            webhook: webhook
            channel: channel
            username: username
          warning: null
        pagerduty_credentials: pagerduty_credentials
        entity: entity
      x-go-package: github.com/odpf/siren/docs
    AlertHistoryObject:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          x-go-name: Created
        id:
          type: integer
          format: uint64
          x-go-name: ID
        level:
          type: string
          x-go-name: Level
        metric_name:
          type: string
          x-go-name: MetricName
        metric_value:
          type: string
          x-go-name: MetricValue
        name:
          type: string
          x-go-name: Name
        template_id:
          type: string
          x-go-name: TemplateID
        updated_at:
          type: string
          format: date-time
          x-go-name: Updated
      example:
        metric_name: metric_name
        updated_at: 2000-01-23T04:56:07.000+00:00
        level: level
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        metric_value: metric_value
        template_id: template_id
        id: 0
      x-go-package: github.com/odpf/siren/domain
    Alerts:
      type: object
      properties:
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          x-go-name: Alerts
      x-go-package: github.com/odpf/siren/domain
    Annotations:
      type: object
      properties:
        metric_name:
          type: string
          x-go-name: MetricName
        metric_value:
          type: string
          x-go-name: MetricValue
        resource:
          type: string
          x-go-name: Resource
        template:
          type: string
          x-go-name: Template
      x-go-package: github.com/odpf/siren/domain
    Labels:
      type: object
      properties:
        severity:
          type: string
          x-go-name: Severity
      x-go-package: github.com/odpf/siren/domain
    Rule:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          x-go-name: CreatedAt
        entity:
          type: string
          x-go-name: Entity
        group_name:
          type: string
          x-go-name: GroupName
        id:
          type: integer
          format: uint64
          x-go-name: ID
        name:
          type: string
          x-go-name: Name
        namespace:
          type: string
          x-go-name: Namespace
        status:
          type: string
          x-go-name: Status
        template:
          type: string
          x-go-name: Template
        updated_at:
          type: string
          format: date-time
          x-go-name: UpdatedAt
        variables:
          type: array
          items:
            $ref: '#/components/schemas/RuleVariable'
          x-go-name: Variables
      example:
        template: template
        variables:
        - name: name
          description: description
          type: type
          value: value
        - name: name
          description: description
          type: type
          value: value
        updated_at: 2000-01-23T04:56:07.000+00:00
        group_name: group_name
        name: name
        namespace: namespace
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        entity: entity
        status: status
      x-go-package: github.com/odpf/siren/domain
    RuleVariable:
      type: object
      properties:
        description:
          type: string
          x-go-name: Description
        name:
          type: string
          x-go-name: Name
        type:
          type: string
          x-go-name: Type
        value:
          type: string
          x-go-name: Value
      example:
        name: name
        description: description
        type: type
        value: value
      x-go-package: github.com/odpf/siren/domain
    SlackConfig:
      type: object
      properties:
        critical:
          $ref: '#/components/schemas/SlackCredential'
        warning:
          $ref: '#/components/schemas/SlackCredential'
      example:
        critical:
          webhook: webhook
          channel: channel
          username: username
        warning: null
      x-go-package: github.com/odpf/siren/domain
    SlackCredential:
      type: object
      properties:
        channel:
          type: string
          x-go-name: Channel
        username:
          type: string
          x-go-name: Username
        webhook:
          type: string
          x-go-name: Webhook
      example:
        webhook: webhook
        channel: channel
        username: username
      x-go-package: github.com/odpf/siren/domain
    Template:
      type: object
      properties:
        body:
          type: string
          x-go-name: Body
        created_at:
          type: string
          format: date-time
          x-go-name: CreatedAt
        id:
          type: integer
          format: uint64
          x-go-name: ID
        name:
          type: string
          x-go-name: Name
        tags:
          type: array
          items:
            type: string
          x-go-name: Tags
        updated_at:
          type: string
          format: date-time
          x-go-name: UpdatedAt
        variables:
          type: array
          items:
            $ref: '#/components/schemas/Variable'
          x-go-name: Variables
      example:
        variables:
        - default: default
          name: name
          description: description
          type: type
        - default: default
          name: name
          description: description
          type: type
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        body: body
        tags:
        - tags
        - tags
      x-go-package: github.com/odpf/siren/domain
    Variable:
      type: object
      properties:
        default:
          type: string
          x-go-name: Default
        description:
          type: string
          x-go-name: Description
        name:
          type: string
          x-go-name: Name
        type:
          type: string
          x-go-name: Type
      example:
        default: default
        name: name
        description: description
        type: type
      x-go-package: github.com/odpf/siren/domain
  responses:
    getResponse:
      description: Get alertHistory response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AlertHistoryObject'
    listResponse:
      description: List templates response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Template'
    listRulesResponse:
      description: List rules response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Rule'
    pingResponse:
      description: Response body for Ping.
      content: {}
    renderTemplatesResponse:
      content: {}
    rulesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rule'
    templatesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Template'
  securitySchemes:
    basic:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"
